pretty_risk = function(df) {
    df = df[, order(df[1,])]
    df2 = df
    rank_df = df
    order_df = df
    for (i in c(1:ncol(df))) {
        if (df[, i] * 100 < 0.1) {
            df2[, i] = "< 0.1%"
        }  else if (df[, i] * 100 > 99.9) {
            df2[, i] = "> 99.9%"
        } else {
            df2[, i] = paste(round(df[, i] * 100, 1), "%", sep="")
        }
        if (i == 1) {
            rank_df[,i] = 5
        } else {
            rank_df[,i] = 5 - min(floor((df[,i]-df[,1]) * 100), 5)
        }
        order_df[,i]=i
    }
    return(list(df = df2, rank_df = rank_df, order_df=order_df))
}

death = function(data) {
    lp.dpp4 = -5.643307 + 0.072831526 * 
        data$Age + 0.25665369 * (data$Gender == "Male") - 0.19532341 * 
        (data$Race == "Black race") - 0.57861508 * (data$Race == "Asians") - 
        0.17587456 * (data$Race == "Other/Unknown") - 0.067812491 * 
        (data$Marital == "Married or demestic parter") + 0.060336608 * 
        (data$Marital == "Divorced/Separated/Widow") + 0.026284621 * 
        (data$Marital == "Other/Unknown") + 1.2432801 * (data$FinancialClass == 
                                                       "Medicaid") + 0.81265689 * (data$FinancialClass == "Medicare") + 
        1.2876592 * (data$FinancialClass == "Other") + 0.28766118 * 
        data$Hx.Stroke + 0.21479361 * data$Hx.HTN + 0.87969221 * data$Hx.RenalFailure + 
        0.0073929554 * data$ADI - 1.6432491e-06 * max(data$ADI - 77.418088, 
                                                 0)**3 + 2.9248291e-06 * max(data$ADI - 99.565307, 0)**3 - 1.28158e-06 * 
        max(data$ADI - 127.9626, 0)**3 - 0.029305643 * data$BMI + 0.00012395243 * 
        max(data$BMI - 25.54, 0)**3 - 0.000206149 * max(data$BMI - 33.04, 
                                                   0)**3 + 8.2196572e-05 * max(data$BMI - 44.35, 0)**3 + 0.0016969555 * 
        data$LDL - 0.016793316 * data$Diastolic + 0.0080475294 * data$Systolic + 
        0.72333472 * (data$SmokingHistory == "Current Smoker") + 0.32585518 * 
        (data$SmokingHistory == "Former smoker") - 0.12939406 * data$Statin + 
        0.52410308 * data$HeartDisease + 0.75319806 * data$HF - 0.23231572 * 
        data$Dyslipidemia
    lp.glp1 = lp.dpp4 - 0.4380328 
    lp.insulin = lp.dpp4 + 0.92825707 
    lp.sglt2 = lp.dpp4 - 1.2336101
    lp.sulf = lp.dpp4 + 0.35313986
    lp.thia = lp.dpp4 + 0.1750078
    return(pretty_risk(data.frame(dpp4 = 1 - 0.9482438 ** exp(lp.dpp4),
                    glp1 = 1 - 0.9482438 ** exp(lp.glp1),
                    insulin = 1 - 0.9482438 ** exp(lp.insulin),
                    sglt2 = 1 - 0.9482438 ** exp(lp.sglt2),
                    sulf = 1 - 0.9482438 ** exp(lp.sulf),
                    thia = 1 - 0.9482438 ** exp(lp.thia))))
}

stroke = function(data) {
    lp.dpp4 =   - 0.021402303 * data$TimeBetweenMetforminToSecond + 
        0.017492204 * data$Age + 0.17310296 * (data$Gender == "Male") + 0.010489828 * 
        (data$Race == "Black race") - 0.1322687 * (data$Race == "Asians") + 
        0.13390188 * (data$Race == "Other/Unknown") - 0.060575492 * (data$Marital == "Married or demestic parter") - 
        0.019618263 * (data$Marital == "Divorced/Separated/Widow") - 0.02893493 * (data$Marital == "Other/Unknown") + 
        2.5828707e-06 * data$MedianIncome + 0.98427381 * (data$FinancialClass == 
                                                         "Medicaid") + 0.91088659 * (data$FinancialClass == "Medicare") + 
        0.56437592 * (data$FinancialClass == "Other") + 2.488247 * data$Hx.Stroke + 
        0.28377714 * data$Hx.MI + 0.23544745 * data$Hx.HTN + 0.37561481 * data$Hx.RenalFailure - 
        0.010044672 * data$BMI + 0.029515141 * data$A1c + 0.001228672 * data$LDL - 
        0.012929354 * data$Diastolic + 0.013528839 * data$Systolic + 0.29889935 * 
        (data$SmokingHistory == "Current Smoker") + 0.2121103 * (data$SmokingHistory == 
                                                               "Former smoker") + 0.26464077 * data$Statin + 0.058107362 * data$HF - 
        0.11232051 * data$Dyslipidemia
    lp.glp1 = lp.dpp4 + 0.082321277
    lp.insulin = lp.dpp4 + 0.14212045 
    lp.sglt2 = lp.dpp4 - 0.10383691
    lp.sulf = lp.dpp4 + 0.022476738
    lp.thia = lp.dpp4 + 0.0043358422
    return(pretty_risk(data.frame(dpp4 = 1 - 0.9974343 ** exp(lp.dpp4),
                                  glp1 = 1 - 0.9974343 ** exp(lp.glp1),
                                  insulin = 1 - 0.9974343 ** exp(lp.insulin),
                                  sglt2 = 1 - 0.9974343 ** exp(lp.sglt2),
                                  sulf = 1 - 0.9974343 ** exp(lp.sulf),
                                  thia = 1 - 0.9974343 ** exp(lp.thia))))
}

mi = function(data) {
    lp.dpp4 = - 0.014797501 * 
        data$TimeBetweenMetforminToSecond + 0.047875864 * data$Age - 2.6576477e-05 * 
        max(data$Age - 42.14465, 0)**3 + 5.5197725e-05 * max(data$Age - 59.503936, 
                                                        0)**3 - 2.8621248e-05 * max(data$Age - 75.623032, 0)**3 + 0.35961093 * 
        (data$Gender == "Male") - 0.098447456 * (data$Race == "Black race") - 
        0.81559539 * (data$Race == "Asians") - 0.075369325 * (data$Race == 
                                                            "Other/Unknown") - 0.037844726 * (data$Marital == "Married or demestic parter") + 
        0.12862353 * (data$Marital == "Divorced/Separated/Widow") - 0.031329775 * 
        (data$Marital == "Other/Unknown") - 1.4420504e-05 * data$MedianIncome + 
        6.1551403e-15 * max(data$MedianIncome - 32090, 0)**3 - 1.0626331e-14 * 
        max(data$MedianIncome - 52665, 0)**3 + 4.4711909e-15 * max(data$MedianIncome - 
                                                                  80989, 0)**3 + 0.39884242 * (data$FinancialClass == "Medicaid") + 
        0.11356639 * (data$FinancialClass == "Medicare") + 0.024767061 * 
        (data$FinancialClass == "Other") + 0.20737107 * data$Hx.Stroke + 2.8491215 * 
        data$Hx.MI - 0.00030200413 * data$Hx.HTN + 0.38722948 * data$Hx.RenalFailure + 
        0.0036667832 * data$BMI + 0.001042963 * data$HDL - 0.006894006 * data$Diastolic + 
        0.0064556952 * data$Systolic + 0.2166828 * (data$SmokingHistory == 
                                                   "Current Smoker") + 0.16671636 * (data$SmokingHistory == "Former smoker") + 
        0.11811998 * data$Statin + 0.40630152 * data$HF + 0.10219318 * data$Dyslipidemia
    lp.glp1 = lp.dpp4 - 0.32735712
    lp.insulin = lp.dpp4 + 0.30596029 
    lp.sglt2 = lp.dpp4 - 0.042549973
    lp.sulf = lp.dpp4 - 0.070517696
    lp.thia = lp.dpp4 - 0.34276747
    return(pretty_risk(data.frame(dpp4 = 1 - 0.9983436 ** exp(lp.dpp4),
                      glp1 = 1 - 0.9983436 ** exp(lp.glp1),
                      insulin = 1 - 0.9983436 ** exp(lp.insulin),
                      sglt2 = 1 - 0.9983436 ** exp(lp.sglt2),
                      sulf = 1 - 0.9983436 ** exp(lp.sulf),
                      thia = 1 - 0.9983436 ** exp(lp.thia))))
    
}

htn = function(data) {
    lp.dpp4 = - 0.022112801 * 
        data$TimeBetweenMetforminToSecond + 0.018392972 * data$Age - 7.5227371e-06 * 
        max(data$Age - 42.14465, 0)**3 + 1.5624267e-05 * max(data$Age - 59.503936, 
                                                        0)**3 - 8.10153e-06 * max(data$Age - 75.623032, 0)**3 + 0.081892809 * 
        (data$Gender == "Male") + 0.12854608 * (data$Race == "Black race") - 
        0.0062497711 * (data$Race == "Asians") - 0.016922545 * (data$Race == 
                                                              "Other/Unknown") + 0.12993185 * (data$FinancialClass == "Medicaid") - 
        0.04673756 * (data$FinancialClass == "Medicare") + 0.0055262649 * 
        (data$FinancialClass == "Other") + 0.18112783 * data$Hx.Stroke + 0.30798366 * 
        data$Hx.MI + 1.0131008 * data$Hx.HTN + 0.34458588 * data$Hx.RenalFailure + 
        0.0014396419 * data$ADI + 0.0071301367 * data$BMI - 0.0006781662 * 
        data$LDL + 0.0078144866 * data$Systolic + 0.092218896 * data$Statin + 0.25625825 * 
        data$HeartDisease + 0.32577704 * data$HF + 0.088588525 * data$Dyslipidemia
    lp.glp1 = lp.dpp4 - 0.0064087362
    lp.insulin = lp.dpp4 + 0.35863064
    lp.sglt2 = lp.dpp4 + 0.029865269
    lp.sulf = lp.dpp4 + 0.078339164
    lp.thia = lp.dpp4 - 0.074087011 
    return(pretty_risk(data.frame(dpp4 = 1 - 0.9054291 ** exp(lp.dpp4),
                                  glp1 = 1 - 0.9054291 ** exp(lp.glp1),
                                  insulin = 1 - 0.9054291 ** exp(lp.insulin),
                                  sglt2 = 1 - 0.9054291 ** exp(lp.sglt2),
                                  sulf = 1 - 0.9054291 ** exp(lp.sulf),
                                  thia = 1 - 0.9054291 ** exp(lp.thia))))
}

rf = function(data) {
    lp.dpp4 = + 0.014130357 * data$Age + 
        0.32016383 * (data$Race == "Black race") - 0.027051957 * (data$Race == 
                                                                "Asians") - 0.54050643 * (data$Race == "Other/Unknown") - 0.23164584 * 
        (data$Marital == "Married or demestic parter") - 0.09833821 * 
        (data$Marital == "Divorced/Separated/Widow") + 0.39630066 * (data$Marital == 
                                                                   "Other/Unknown") + 0.69924575 * (data$FinancialClass == "Medicaid") + 
        0.57655293 * (data$FinancialClass == "Medicare") - 0.14945184 * 
        (data$FinancialClass == "Other") + 0.0082006697 * data$Hx.Stroke + 
        0.23954432 * data$Hx.MI - 0.0047981254 * data$Hx.HTN + 3.0329805 * 
        data$Hx.RenalFailure + 0.0045107879 * data$ADI - 0.0020005334 * data$BMI - 
        0.0043336399 * data$HDL + 4.6321583e-07 * max(data$HDL - 32, 0)**3 - 
        5.4829629e-07 * max(data$HDL - 59, 0)**3 + 8.5080458e-08 * max(data$HDL - 
                                                                      206, 0)**3 - 0.017353993 * data$Diastolic + 0.017432162 * data$Systolic - 
        0.37667511 * (data$SmokingHistory == "Current Smoker") + 0.10500484 * 
        (data$SmokingHistory == "Former smoker") + 0.29212851 * data$HeartDisease + 
        0.88334534 * data$HF - 0.072375348 * data$Dyslipidemia
    lp.glp1 = lp.dpp4 - 0.68584748
    lp.insulin = lp.dpp4 + 0.55387122
    lp.sglt2 = lp.dpp4 + 0.2718779
    lp.sulf = lp.dpp4 - 0.036288693
    lp.thia = lp.dpp4 - 0.32605244 
    return(pretty_risk(data.frame(dpp4 = 1 - 0.9982375 ** exp(lp.dpp4),
                                  glp1 = 1 - 0.9982375 ** exp(lp.glp1),
                                  insulin = 1 - 0.9982375 ** exp(lp.insulin),
                                  sglt2 = 1 - 0.9982375 ** exp(lp.sglt2),
                                  sulf = 1 - 0.9982375 ** exp(lp.sulf),
                                  thia = 1 - 0.9982375 ** exp(lp.thia))))
}
