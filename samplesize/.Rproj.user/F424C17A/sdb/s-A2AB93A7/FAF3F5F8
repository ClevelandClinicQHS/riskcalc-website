{
    "collab_server" : "",
    "contents" : "function(input, output, session) {\n    useShinyjs(html = TRUE)\n    \n    design <- reactiveVal(\"Introduction\")\n    \n    observeEvent(input$design,{\n        if (input$design==\"Introduction\") {\n            shinyjs::show(id=\"introduction\")\n            shinyjs::hide(id=\"outcome_rct\")\n            shinyjs::hide(id=\"outcome_cc\")\n            shinyjs::hide(id=\"outcome_cohort\")\n            shinyjs::hide(id=\"outcome_cross\")\n            shinyjs::hide(id=\"outcome_survey\")\n        }\n        if (input$design %in% c(\"NonInferiority\", \"Superiority\", \"Equivalence\")) {\n            shinyjs::hide(id=\"introduction\")\n            shinyjs::show(id=\"outcome_rct\")\n            shinyjs::hide(id=\"outcome_cc\")\n            shinyjs::hide(id=\"outcome_cohort\")\n            shinyjs::hide(id=\"outcome_cross\")\n            shinyjs::hide(id=\"outcome_survey\")\n        }\n        if (input$design == \"CaseControl\") {\n            shinyjs::hide(id=\"introduction\")\n            shinyjs::hide(id=\"outcome_rct\")\n            shinyjs::show(id=\"outcome_cc\")\n            shinyjs::hide(id=\"outcome_cohort\")\n            shinyjs::hide(id=\"outcome_cross\")\n            shinyjs::hide(id=\"outcome_survey\")\n        }\n        if (input$design == \"Cohort\") {\n            shinyjs::hide(id=\"introduction\")\n            shinyjs::hide(id=\"outcome_rct\")\n            shinyjs::hide(id=\"outcome_cc\")\n            shinyjs::show(id=\"outcome_cohort\")\n            shinyjs::hide(id=\"outcome_cross\")\n            shinyjs::hide(id=\"outcome_survey\")\n        }\n        if (input$design == \"CrossSectional\") {\n            shinyjs::hide(id=\"introduction\")\n            shinyjs::hide(id=\"outcome_rct\")\n            shinyjs::hide(id=\"outcome_cc\")\n            shinyjs::hide(id=\"outcome_cohort\")\n            shinyjs::show(id=\"outcome_cross\")\n            shinyjs::hide(id=\"outcome_survey\")\n        }\n        if (input$design == \"Survey\") {\n            shinyjs::hide(id=\"introduction\")\n            \n            shinyjs::hide(id=\"outcome_rct\")\n            shinyjs::hide(id=\"outcome_cc\")\n            shinyjs::hide(id=\"outcome_cohort\")\n            shinyjs::hide(id=\"outcome_cross\")\n            shinyjs::show(id=\"outcome_survey\")\n        }\n        if(input$design==\"Introduction\") {\n            shinyjs::hide(id=\"run-tab\")\n            shinyjs::hide(id=\"DesignTitle\")\n        } else {\n            shinyjs::show(id=\"run-tab\")\n            shinyjs::show(id=\"DesignTitle\")\n        }\n        if(!is.null(input$design)) {\n            design(input$design)\n        }\n    })\n    \n    output$summary <- renderUI({\n        d = design()\n        if (d == \"NonInferiority\") {\n            h1(\"Non-inferiority Trial\")\n        } else if (d == \"Superiority\") {\n            h1(\"Superiority Trial\")\n        } else if (d == \"Equivalence\") {\n            h1(\"Equivalence Trial\")\n        } else if (d==\"CaseControl\") {\n            h1(\"Case-control Study\")\n        } else if (d==\"Cohort\") {\n            h1(\"Cohort Study\")\n        } else if (d==\"CrossSectional\") {\n            h1(\"Cross-sectional Study\")\n        } else if (d==\"Survey\") {\n            h1(\"Survey (Cross-sectional)\")\n        }\n    })\n    \n    observeEvent(input$rctDesign,\n                 {\n                     showNavPane(input$rctDesign)\n                 })\n    observeEvent(input$ccDesign,\n                 {\n                     showNavPane(input$ccDesign)\n                 })\n    observeEvent(input$cohortDesign,\n                 {\n                     showNavPane(input$cohortDesign)\n                 })\n    observeEvent(input$independentDesign,\n                 {\n                     showNavPane(input$independentDesign)\n                 })\n    observeEvent(input$crossDesign,\n                 {\n                     showNavPane(input$crossDesign)\n                 })\n    observeEvent(input$surveyDesign,\n                 {\n                     showNavPane(input$surveyDesign)\n                 })\n\n    rct_mean_values <- reactiveValues(\n        lastUpdated = NULL\n    )\n    observe({\n        lapply(c(\"rct_mean_treat\", \"rct_mean_control\"), function(x) {\n            observe({\n                input[[x]]\n                rct_mean_values$lastUpdated <- x\n            })\n        })\n    })\n    observeEvent(input$rct_mean_treat,\n                 {\n                     updateTextInput(id=\"rct_mean_diff\", value = as.numeric(input$rct_mean_treat)-as.numeric(input$rct_mean_control))\n                 }\n    )\n    observeEvent(input$rct_mean_control,\n                 {\n                     updateTextInput(id=\"rct_mean_diff\", value = as.numeric(input$rct_mean_treat)-as.numeric(input$rct_mean_control))\n                 }\n    )\n    observeEvent(input$rct_mean_treat,\n                 {\n                     updateTextInput(id=\"rct_mean_diff\", value = as.numeric(input$rct_mean_treat)-as.numeric(input$rct_mean_control))\n                 }\n    )\n    observeEvent(input$rct_mean_diff,\n                 {\n                     if (input$design  %in% c(\"NonInferiority\", \"Superiority\", \"Equivalence\") & input$rctDesign==\"continuous\") {\n                     if (is.null(rct_mean_values$lastUpdated) | rct_mean_values$lastUpdated == \"rct_mean_treat\") {\n                         updateTextInput(id=\"rct_mean_control\", value = as.numeric(input$rct_mean_treat)-as.numeric(input$rct_mean_diff))\n                     } else {\n                         updateTextInput(id=\"rct_mean_treat\", value = as.numeric(input$rct_mean_control)+as.numeric(input$rct_mean_diff))\n                     }\n                 }}\n    )\n    observeEvent(input$radiobar1, {\n        if (input$radiobar1 == \"proportion\") {\n            shinyjs::show(\"rctProportion\")\n            shinyjs::hide(\"rctOR\")\n        } else {\n            shinyjs::hide(\"rctProportion\")\n            shinyjs::show(\"rctOR\")\n        }\n    })\n    \n    observeEvent(input$radiobar2, {\n        if (input$radiobar2 == \"known\") {\n            shinyjs::show(\"known\")\n            shinyjs::hide(\"unknown\")\n        } else {\n            shinyjs::hide(\"known\")\n            shinyjs::show(\"unknown\")\n        }\n    })\n    \n    observeEvent(input$radiobar3, {\n        if (input$radiobar3 == \"ccproportion\") {\n            shinyjs::show(\"ccproportion\")\n            shinyjs::hide(\"ccor\")\n        } else {\n            shinyjs::hide(\"ccproportion\")\n            shinyjs::show(\"ccor\")\n        }\n    })\n    \n    observeEvent(input$radiobar4, {\n        if (input$radiobar4 == \"cohortproportion\") {\n            shinyjs::show(\"cohortproportion\")\n            shinyjs::hide(\"cohortrr\")\n        } else {\n            shinyjs::hide(\"cohortproportion\")\n            shinyjs::show(\"cohortrr\")\n        }\n    })\n    \n    observeEvent(input$radiobar5, {\n        if (input$radiobar5 == \"known\") {\n            shinyjs::show(\"cohortknown\")\n            shinyjs::hide(\"cohortunknown\")\n        } else {\n            shinyjs::hide(\"cohortknown\")\n            shinyjs::show(\"cohortunknown\")\n        }\n    })\n    \n    observeEvent(input$radiobar6, {\n        if (input$radiobar6 == \"crossproportion\") {\n            shinyjs::show(\"crossproportion-p\")\n            shinyjs::hide(\"crossrr-p\")\n        } else {\n            shinyjs::hide(\"crossproportion-p\")\n            shinyjs::show(\"crossrr-p\")\n        }\n    })\n    \n    v = reactiveValues(res = NULL)\n    \n    observeEvent(input$run,{\n        if (input$design %in% c(\"NonInferiority\", \"Superiority\", \"Equivalence\") & input$rctDesign==\"continuous\"){\n            res = rct_continuous(treat = input$rct_mean_treat, control = input$rct_mean_control, \n                                 diff=input$rct_mean_diff, delta=input$rct_delta_c, sd=input$rct_sd, \n                                 r=input$r_rct_c, power=input$beta_rct_c, alpha=input$alpha_rct_c, drop_rate = input$dr_c/100, design=input$design)\n                output_data = data.frame(\n                    V1 = c(\"Significance level (1-alpha)\", \"Power (1-beta)\", \"Ratio of sample size, treat/control\", \"Expected mean in the treatment group\", \"Expected mean in the control group\", \"SD\", \"Margin\", \"Drop rate (%)\", \"Result\", \"Sample Size - Treat\", \"Sample Size - Control\", \"Total sample size\"),\n                    V2 = c(1-input$alpha_rct_c, input$beta_rct_c, input$r_rct_c, input$rct_mean_treat, input$rct_mean_control, input$rct_sd, input$rct_delta_c, input$dr_c, \"\", res$n_treat, res$n_control, res$n_total)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(9, bold = T, background = \"#EEF5DB\") %>% \n                    add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n        }\n        if (input$design %in% c(\"NonInferiority\", \"Superiority\", \"Equivalence\") & input$rctDesign==\"dichotomous\"){\n            if (input$radiobar1 == \"proportion\") {\n                res = rct_proportion(treat=input$rct_p_treat, control=input$rct_p_control,  \n                                 delta=input$rct_delta_p, \n                                 r=input$r_rct_p, power=input$beta_rct_p, alpha=input$alpha_rct_p, drop_rate = input$dr_d/100, design=input$design)\n                output_data = data.frame(\n                    V1 = c(\"Significance level (1-alpha)\", \"Power (1-beta)\", \"Ratio of sample size, treat/control\", \"Expected proportion in the treatment group\", \"Expected proportion in the control group\",\"Margin\", \"Drop rate (%)\", \"Result\", \"Sample Size - Treat\", \"Sample Size - Control\", \"Total sample size\"),\n                    V2 = c(1-input$alpha_rct_p, input$beta_rct_p, input$r_rct_p, input$rct_p_treat, input$rct_p_control, input$rct_delta_p,input$dr_d, \"\", res$n_treat, res$n_control, res$n_total)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(8, bold = T, background = \"#EEF5DB\") %>% \n                    add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            } else {\n                res = rct_proportion(OR = input$rct_p_or,  \n                                     delta_exp=input$rct_deltaexp_p, \n                                     r=input$r_rct_p, power=input$beta_rct_p, alpha=input$alpha_rct_p, design=input$design)\n                output_data = data.frame(\n                    V1 = c(\"Significance level (1-alpha)\", \"Power (1-beta)\", \"Ratio of sample size, treat/control\", \"Odds ratio\",\"Margin\", \"Result\", \"Sample Size - Treat\", \"Sample Size - Control\", \"Total sample size\"),\n                    V2 = c(1-input$alpha_rct_p, input$beta_rct_p, input$r_rct_p, input$rct_p_or, input$rct_deltaexp_p, \"\", res$n_treat, res$n_control, res$n_total)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(6, bold = T, background = \"#EEF5DB\") %>% \n                    add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            }\n        }\n        if (input$design %in% c(\"NonInferiority\", \"Superiority\", \"Equivalence\") & input$rctDesign==\"tte\") {\n            if (input$radiobar2 == \"known\") {\n                res = rct_survival(HR=input$rct_s_hr, delta=input$rct_delta_s, pi_treat=input$rct_s_treat, pi_control=input$rct_s_control, r=input$r_rct_s, power=input$beta_rct_s, alpha=input$alpha_rct_s)\n            } else {\n                res = rct_survival(HR=input$rct_s_hr, delta=input$rct_delta_s, t=input$rct_s_time, r=input$r_rct_s, power=input$beta_rct_s, alpha=input$alpha_rct_s)\n            }\n            output_data = data.frame(\n                V1 = c(\"Significance level (1-alpha)\", \"Power (1-beta)\", \"Ratio of sample size, treat/control\", \"Hazard ratio\", \"Margin\", \"Probability of event in the treat group\", \"Probability of event in the control group\", \"Result\", \"Sample Size - Treat\", \"Sample Size - Control\", \"Total sample size\"),\n                V2 = c(1-input$alpha_rct_s, input$beta_rct_s, input$r_rct_s, input$rct_s_hr, input$rct_delta_s, round(res$pi_treat, 3), round(res$pi_control, 3), \"\", res$n_treat, res$n_control, res$n_total)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(8, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"CaseControl\" & input$ccDesign==\"unmatched\") {\n            twoside = ifelse(is.null(input$checkbox1), F, T)\n            if (input$radiobar3==\"ccproportion\") {\n                res = cc(p0=input$unmatched_p0, p1=input$unmatched_p1, r=input$r_unmatched, alpha=input$alpha_unmatched, power=input$beta_unmatched, two.side=twoside, design = \"unmatched\")\n                output_data = data.frame(\n                    V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"significance level (1-alpha)\", \"Power (1-beta)\", \"Ratio of sample size, control/case\", \"Probability of event in the case group\", \"Probability of event in the control group\", \"Result\", \"\", \"Sample Size - Case\", \"Sample Size - Control\", \"Total sample size\"),\n                    V2 = c(rep(\"\", 6), \"Fleiss\", res$fless.case, res$fless.control, res$fless.case+ res$fless.control),\n                    V3 = c(1-input$alpha_unmatched, input$beta_unmatched, input$r_unmatched, input$unmatched_p0, input$unmatched_p1, \"\", \"Fleiss with correction for continuity\", res$flesscc.case, res$flesscc.control, res$flesscc.case+res$flesscc.control)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(6, bold = T, background = \"#EEF5DB\") %>% \n                    row_spec(7, bold = T) %>% \n                    add_header_above(c(\"Sample size\"=3), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            } else {\n                res = cc(OR =input$unmatched_or, r=input$r_unmatched, alpha=input$alpha_unmatched, power=input$beta_unmatched, two.side=twoside, design = \"unmatched\")\n                output_data = data.frame(\n                    V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, control/case\", \"OR\", \"Result\",\"\", \"Sample Size - Case\", \"Sample Size - Control\", \"Total sample size\"),\n                    V2 = c(rep(\"\", 5), \"Fleiss\", res$fless.case, res$fless.control, res$fless.case+ res$fless.control),\n                    V3 = c(1-input$alpha_unmatched, input$beta_unmatched, input$r_unmatched, input$unmatched_or, \"\", \"Fleiss with correction for continuity\", res$flesscc.case, res$flesscc.control, res$flesscc.case+res$flesscc.control)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(5, bold = T, background = \"#EEF5DB\") %>% \n                    row_spec(6, bold = T) %>% \n                    add_header_above(c(\"Sample size\"=3), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            }\n        }\n        if (input$design == \"CaseControl\" & input$ccDesign==\"matched\") {\n            twoside = ifelse(is.null(input$checkbox2), F, T)\n            res = cc(p0=input$matched_p0, p1=input$matched_p1, r=input$r_matched, alpha=input$alpha_matched, power=input$beta_matched, two.side=twoside, design = \"matched\") \n            output_data = data.frame(\n                V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, control/case\", \"Probability of event in the case group\", \"Probability of event in the control group\", \"Result\", \"Sample Size - Case\", \"Sample Size - Control\", \"Total sample size\"),\n                V2 = c(1-input$alpha_matched, input$beta_matched, input$r_matched, input$matched_p0, input$matched_p1, \"\", res$n.case, res$n.control, res$n.case+res$n.control)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(6, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"Cohort\" & input$cohortDesign==\"independent\" & input$independentDesign==\"independentProportional\") {\n            twoside = ifelse(is.null(input$checkbox3), F, T)\n            if (input$radiobar4==\"cohortproportion\") {\n                res = cohort(p1=input$ind_p0, p2=input$ind_p1, r=input$r_ind, alpha=input$alpha_ind, power=input$beta_ind, two.side=twoside, drop_rate=input$dr_i/100, design = \"independent\")\n                output_data = data.frame(\n                    V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, unexposed/exposed\", \"Probability of event in the unexposed group\", \"Probability of event in the exposed group\", \"Drop rate (%)\", \"Result\", \"\", \"Sample Size - Exposed\", \"Sample Size - Unexposed\", \"Total sample size\"),\n                    V2 = c(rep(\"\", 7), \"Fleiss\", res$n_exposed, res$n_unexposed, res$n_exposed+res$n_unexposed),\n                    V3 = c(1-input$alpha_ind, input$beta_ind, input$r_ind, input$ind_p0, input$ind_p1, input$dr_i, \"\", \"Fleiss with correction for continuity\", res$n_exposed_cc, res$n_unexposed_cc, res$n_exposed_cc+res$n_unexposed_cc)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(7, bold = T, background = \"#EEF5DB\") %>% \n                    row_spec(8, bold = T) %>% \n                    add_header_above(c(\"Sample size\"=3), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            } else {\n                res = cohort(RR=input$ind_rr, r=input$r_ind, alpha=input$alpha_ind, power=input$beta_ind, two.side=twoside, drop_rate=input$dr_i/100, design = \"independent\")\n                output_data = data.frame(\n                    V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, unexposed/exposed\", \"Relatvie Risk (p1/p0)\",\"Drop rate (%)\", \"Result\",\"\", \"Sample Size - Exposed\", \"Sample Size - Unexposed\", \"Total sample size\"),\n                    V2 = c(rep(\"\", 6), \"Fleiss\", res$n_exposed, res$n_unexposed, res$n_exposed+res$n_unexposed),\n                    V3 = c(1-input$alpha_ind, input$beta_ind, input$r_ind, input$ind_rr,input$dr_i, \"\", \"Fleiss with correction for continuity\", res$n_exposed_cc, res$n_unexposed_cc, res$n_exposed_cc+res$n_unexposed_cc)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(6, bold = T, background = \"#EEF5DB\") %>% \n                    row_spec(7, bold = T) %>% \n                    add_header_above(c(\"Sample size\"=3), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            }\n        }\n        if (input$design == \"Cohort\" & input$cohortDesign==\"independent\" & input$independentDesign==\"independentContinuous\") {\n            twoside = ifelse(is.null(input$checkbox8), F, T)\n            res = cross_sectional(p1=input$indc_m1, p2=input$indc_m2, variance=input$var_indc, r=input$r_indc, alpha=input$alpha_indc, power=input$beta_indc, two.side=twoside, design = \"continuous\")\n            output_data = data.frame(\n                V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, unexposed/exposed group\", \"Expected mean in unexposed group\", \"Expected mean in exposed group\", \"Population variance\", \"Result\", \"Sample Size - unexposed group\", \"Sample Size - exposed group\", \"Total sample size\"),\n                V2 = c(1-input$alpha_indc, input$beta_indc, input$r_indc, input$indc_m1, input$indc_m2, input$var_indc, \"\", res$n1, res$n2, res$n1+res$n2)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(7, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"Cohort\" & input$cohortDesign==\"paired\") {\n            twoside = ifelse(is.null(input$checkbox4), F, T)\n            res=cohort(p1=input$cohort_pair_p0, p2=input$cohort_pair_p1, alpha=input$alpha_cohort_pair, power=input$beta_cohort_pair, two.side=twoside, drop_rate=input$dr_pair/100, design = \"paired\")\n            output_data = data.frame(\n                V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Probability of event in the exposed group\", \"Probability of event in the unexposed group\", \"Drop rate (%)\", \"Result\", \"Sample Size - Exposed\", \"Sample Size - Unexposed\", \"Total sample size\"),\n                V2 = c(1-input$alpha_cohort_pair, input$beta_cohort_pair, input$cohort_pair_p0, input$cohort_pair_p1, input$dr_pair, \"\", res$n_exposed, res$n_unexposed, res$n_exposed+res$n_unexposed)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(6, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"Cohort\" & input$cohortDesign==\"cohorttte\") {\n            twoside = ifelse(is.null(input$checkbox5), F, T)\n            if (input$radiobar5 == \"known\") {\n                res = cohort_survival(p1=input$cohort_tte_p1, p2=input$cohort_tte_p2, HR=input$cohort_tte_hr, r=input$r_cohort_tte, alpha=input$alpha_cohort_tte, power=input$beta_cohort_tte, two.side=twoside)\n            } else {\n                res = cohort_survival(t=input$cohort_tte_t, HR=input$cohort_tte_hr, r=input$r_cohort_tte, alpha=input$alpha_cohort_tte, power=input$beta_cohort_tte, two.side=twoside)\n            }\n            output_data = data.frame(\n                V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, unexposed/exposed\", \"Hazard ratio\", \"Probability of event in the exposed group\", \"Probability of event in the unexposed group\", \"Result\", \"Sample Size - Exposed\", \"Sample Size - Unexposed\", \"Total sample size\"),\n                V2 = c(1-input$alpha_cohort_tte, input$beta_cohort_tte, input$r_cohort_tte, input$cohort_tte_hr, round(res$p2,3), round(res$p1,3), \"\", res$n_exposed, res$n_unexposed, res$n_exposed+res$n_unexposed)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(7, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"CrossSectional\" & input$crossDesign==\"crosscontinuous\") {\n            twoside = ifelse(is.null(input$checkbox6), F, T)\n            res = cross_sectional(p1=input$cross_m1, p2=input$cross_m2, variance=input$var_cross, r=input$r_cross, alpha=input$alpha_cross, power=input$beta_cross, two.side=twoside, design = \"continuous\")\n            output_data = data.frame(\n                V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, first group/second group\", \"Expected mean in first group\", \"Expected mean in second group\", \"Population variance\", \"Result\", \"Sample Size - first group\", \"Sample Size - second group\", \"Total sample size\"),\n                V2 = c(1-input$alpha_cross, input$beta_cross, input$r_cross, input$cross_m1, input$cross_m2, input$var_cross, \"\", res$n1, res$n2, res$n1+res$n2)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(7, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"CrossSectional\" & input$crossDesign==\"crossproportion\") {\n            twoside = ifelse(is.null(input$checkbox7), F, T)\n            if (input$radiobar6==\"crossproportion\") {\n                res = cross_sectional(p1=input$cross_p1, p2=input$cross_p2, r=input$r_cross_p, alpha=input$alpha_cross_p, power=input$beta_cross_p, two.side=twoside, design = \"proportion\")\n                output_data = data.frame(\n                    V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, first group/second group\", \"Probability of event in first group\", \"Probability of event in second group\", \"Result\", \"\", \"Sample Size - first group\", \"Sample Size - second group\", \"Total sample size\"),\n                    V2 = c(rep(\"\", 6), \"Fleiss\", res$n1, res$n2, res$n1+res$n2),\n                    V3 = c(1-input$alpha_cross_p, input$beta_cross_p, input$r_cross_p, input$cross_p1, input$cross_p2, \"\", \"Fleiss with correction for continuity\", res$n1_cc, res$n2_cc, res$n1_cc+res$n2_cc)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(6, bold = T, background = \"#EEF5DB\") %>% \n                    row_spec(7, bold = T) %>% \n                    add_header_above(c(\"Sample size\"=3), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            } else {\n                res =cross_sectional(RR=input$cross_rr, r=input$r_cross_p, alpha=input$alpha_cross_p, power=input$beta_cross_p, two.side=twoside, design = \"proportion\")\n                output_data = data.frame(\n                    V1 = c(ifelse(twoside, \"2-side significance level (1-alpha/2)\", \"1-side significance level (1-alpha)\"), \"Power (1-beta)\", \"Ratio of sample size, first group/second group\", \"Relatvie Risk (p2/p1)\", \"Result\",\"\", \"Sample Size - first group\", \"Sample Size - second group\", \"Total sample size\"),\n                    V2 = c(rep(\"\", 5), \"Fleiss\", res$n1, res$n2, res$n1+res$n2),\n                    V3 = c(1-input$alpha_cross_p, input$beta_cross_p, input$r_cross_p, input$cross_rr, \"\", \"Fleiss with correction for continuity\", res$n1_cc, res$n2_cc, res$n1_cc+res$n2_cc)\n                ) %>% \n                    knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\", \"c\")) %>% \n                    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                    row_spec(5, bold = T, background = \"#EEF5DB\") %>% \n                    row_spec(6, bold = T) %>% \n                    add_header_above(c(\"Sample size\"=3), background = \"#666666\", color = \"#ffffff\")\n                output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n                v$res = output_data\n            }\n        }\n        if (input$design == \"Survey\" & input$surveyDesign==\"surveycontinuous\") {\n            res = survey(v=input$survey_sd, d=input$survey_sd_d, alpha=input$alpha_survey_c, two.side=T, design=\"continuous\")\n            output_data = data.frame(\n                V1 = c(\"2-side significance level (1-alpha/2)\", \"SD\", \"d\", \"Result\", \"Total sample size\"),\n                V2 = c(1-input$alpha_survey_c, input$survey_sd, input$survey_sd_d, \"\", res$n)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(4, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        if (input$design == \"Survey\" & input$surveyDesign==\"surveyproportion\") {\n            res = survey(v=input$survey_p, d=input$survey_p_d, alpha=input$alpha_survey_p, two.side=T, design=\"proportion\")\n            output_data = data.frame(\n                V1 = c(\"2-side significance level (1-alpha/2)\", \"p\", \"d\", \"Result\", \"Total sample size\"),\n                V2 = c(1-input$alpha_survey_p, input$survey_p, input$survey_p_d, \"\", res$n)\n            ) %>% \n                knitr::kable(\"html\", escape = F, align=c(\"l\", \"c\")) %>% \n                kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = F) %>% \n                row_spec(4, bold = T, background = \"#EEF5DB\") %>% \n                add_header_above(c(\"Sample size\"=2), background = \"#666666\", color = \"#ffffff\")\n            output_data = gsub(\"</th></tr>.*</thead>\",\"</thead>\", output_data)\n            v$res = output_data\n        }\n        shinyjs::show(\"tableOutput\", anim = T)\n        })\n    \n    output$summary_table <- renderText({\n        v$res\n    })\n\n    observe({\n        lapply(names(input)[names(input)!=\"run\"], function(x) {\n            observeEvent(input[[x]], {\n                shinyjs::hide(\"tableOutput\", anim = T)\n                v$res = NULL\n            })\n        })\n    })\n}",
    "created" : 1571679344933.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3134316575",
    "id" : "FAF3F5F8",
    "lastKnownWriteTime" : 1571679366,
    "last_content_update" : 1571679367017,
    "path" : "/Volumes/jix/shiny_library/samplesize/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}